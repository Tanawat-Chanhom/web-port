[{"/Users/tanawatchanhom/Desktop/Works/wep-port/src/reportWebVitals.js":"1","/Users/tanawatchanhom/Desktop/Works/wep-port/src/App.js":"2","/Users/tanawatchanhom/Desktop/Works/wep-port/src/hooks/useWindowSize.js":"3","/Users/tanawatchanhom/Desktop/Works/wep-port/src/pages/Index/index.js":"4","/Users/tanawatchanhom/Desktop/Works/wep-port/src/index.js":"5","/Users/tanawatchanhom/Desktop/Works/wep-port/src/components/TextSlider/TextSlider.js":"6","/Users/tanawatchanhom/Desktop/Works/wep-port/src/components/Work/Work.js":"7"},{"size":362,"mtime":1608628283694,"results":"8","hashOfConfig":"9"},{"size":2696,"mtime":1609162608641,"results":"10","hashOfConfig":"9"},{"size":505,"mtime":1608993630051,"results":"11","hashOfConfig":"9"},{"size":5662,"mtime":1609237703206,"results":"12","hashOfConfig":"9"},{"size":500,"mtime":1608628283694,"results":"13","hashOfConfig":"9"},{"size":759,"mtime":1609155621856,"results":"14","hashOfConfig":"9"},{"size":532,"mtime":1609237580491,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8qpm4y",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tanawatchanhom/Desktop/Works/wep-port/src/reportWebVitals.js",[],"/Users/tanawatchanhom/Desktop/Works/wep-port/src/App.js",["32","33"],"import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport React, { useRef, useEffect } from \"react\";\nimport useWindowSize from \"./hooks/useWindowSize\";\nimport catTyping from \"./assets/images/Cat_typing.gif\";\nimport Index from \"./pages/Index/index\";\nimport kursor from \"kursor\";\n\nfunction App() {\n  //HOOK\n  const size = useWindowSize();\n\n  //REF\n  const app = useRef();\n  const skewContainer = useRef();\n\n  useEffect(() => {\n    document.body.style.height = `${\n      skewContainer.current.getBoundingClientRect().height\n    }px`;\n  }, [size.height]);\n\n  useEffect(() => {\n    Kursor();\n    requestAnimationFrame(() => {\n      skewScrolling();\n    });\n  });\n\n  //Skew Scrolling Configs\n  const skewConfigs = {\n    ease: 0.2,\n    current: 0,\n    previous: 0,\n    rounded: 0,\n  };\n\n  const skewScrolling = () => {\n    skewConfigs.current = window.scrollY;\n    skewConfigs.previous +=\n      (skewConfigs.current - skewConfigs.previous) * skewConfigs.ease;\n    skewConfigs.rounded = Math.round(skewConfigs.previous * 100) / 100;\n\n    //Calcuration for Skew varible\n    const difference = skewConfigs.current - skewConfigs.rounded;\n    const acceleration = difference / size.width;\n    const velocity = +acceleration;\n    const skew = velocity * 7.5;\n\n    //Set Transform\n    // skewContainer.current.style.transform = `translateY(-${skewConfigs.rounded}px)`;\n    skewContainer.current.style.transform = `translateY(-${skewConfigs.rounded}px) skewY(${skew}deg)`;\n\n    requestAnimationFrame(() => {\n      skewScrolling();\n    });\n  };\n\n  const getDeviceType = () => {\n    const ua = navigator.userAgent;\n    if (/(tablet|ipad|playbook|silk)|(android(?!.*mobi))/i.test(ua)) {\n      return \"tablet\";\n    }\n    if (\n      /Mobile|iP(hone|od)|Android|BlackBerry|IEMobile|Kindle|Silk-Accelerated|(hpw|web)OS|Opera M(obi|ini)/.test(\n        ua\n      )\n    ) {\n      return \"mobile\";\n    }\n    return \"desktop\";\n  };\n\n  const Kursor = () => {\n    // new kursor({\n    //   el: \".myBox\",\n    //   type: 1,\n    //   color: \"#fff\",\n    // });\n  };\n\n  return (\n    <div ref={app} className=\"app myBox\">\n      {getDeviceType() === \"desktop\" ? (\n        <div ref={skewContainer} className=\"skew-container\">\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Index}></Route>\n            </Switch>\n          </Router>\n        </div>\n      ) : (\n        <div ref={skewContainer} className=\"skew-container myBox\">\n          <div className=\"not-subport-contianer\">\n            <img src={catTyping} alt=\"image\" />\n            <p>Not Subport Your Device.ðŸ“µ</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/tanawatchanhom/Desktop/Works/wep-port/src/hooks/useWindowSize.js",[],"/Users/tanawatchanhom/Desktop/Works/wep-port/src/pages/Index/index.js",[],"/Users/tanawatchanhom/Desktop/Works/wep-port/src/index.js",[],"/Users/tanawatchanhom/Desktop/Works/wep-port/src/components/TextSlider/TextSlider.js",["34"],"import React, { useEffect } from \"react\";\nimport styles from \"./textSlider.module.css\";\n\nexport default function TextSlider(props) {\n  useEffect(() => {\n    Textgenerator();\n  }, []);\n\n  const Textgenerator = () => {\n    let propsText = props.text + \" - \";\n    let container = document.getElementById(\"textContainer\" + props.text);\n    let span = document.createElement(\"span\");\n    span.appendChild(document.createTextNode(propsText.repeat(50)));\n    container.appendChild(span);\n  };\n\n  return (\n    <div\n      className={[\n        styles.container,\n        styles.drukWideFont,\n        styles.sliderText,\n      ].join(\" \")}\n    >\n      <div\n        id={\"textContainer\" + props.text}\n        className={styles.textContainer}\n      ></div>\n    </div>\n  );\n}\n","/Users/tanawatchanhom/Desktop/Works/wep-port/src/components/Work/Work.js",[],{"ruleId":"35","severity":1,"message":"36","line":7,"column":8,"nodeType":"37","messageId":"38","endLine":7,"endColumn":14},{"ruleId":"39","severity":1,"message":"40","line":95,"column":13,"nodeType":"41","endLine":95,"endColumn":48},{"ruleId":"42","severity":1,"message":"43","line":7,"column":6,"nodeType":"44","endLine":7,"endColumn":8,"suggestions":"45"},"no-unused-vars","'kursor' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Textgenerator'. Either include it or remove the dependency array.","ArrayExpression",["46"],{"desc":"47","fix":"48"},"Update the dependencies array to be: [Textgenerator]",{"range":"49","text":"50"},[179,181],"[Textgenerator]"]